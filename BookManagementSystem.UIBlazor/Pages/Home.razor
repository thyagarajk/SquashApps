@page "/books"
@using BookManagementSystem.UIBlazor.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container mt-4">
    <h1>Books</h1>
    <button class="btn btn-primary mb-3" @onclick="NavigateToAdd">Add Book</button>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Genre</th>
                <th>Final Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Books == null)
            {
                <tr><td colspan="5">Loading...</td></tr>
            }
            else
            {
                @foreach (var book in Books)
                {
                    <tr>
                        <td>@book.Title</td>
                        <td>@book.Author</td>
                        <td>@book.Genre</td>
                        <td>@book.FinalPrice:C</td>
                        <td>
                            <button class="btn btn-warning" @onclick="() => EditBook(book.Id)">Edit</button>
                            <button class="btn btn-danger" @onclick="() => ConfirmDelete(book.Id)">Delete</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    private List<Book> Books;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Books = await Http.GetFromJsonAsync<List<Book>>("api/books");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching books: {ex.Message}");
        }
    }

    private void NavigateToAdd() => Navigation.NavigateTo("/addbook");
    private void EditBook(int id) => Navigation.NavigateTo($"/editbook/{id}");
    private void ConfirmDelete(int id) { /* Open modal */ }
}
