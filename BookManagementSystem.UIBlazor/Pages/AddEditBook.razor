@page "/addbook"
@page "/editbook/{id:int}"
@using BookManagementSystem.UIBlazor.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container mt-4">
    <h1>@(IsEdit ? "Edit Book" : "Add Book")</h1>
    <form>
        <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <input type="text" class="form-control" id="title" @bind="Book.Title" />
        </div>
        <!-- Repeat fields for Author, Genre, PublishedYear, Price, DiscountPercentage -->
        <button class="btn btn-primary" @onclick="SaveBook">Save</button>
    </form>
</div>

@code {
    [Parameter]
    public int? Id { get; set; }

    private Book Book = new();
    private bool IsEdit => Id.HasValue;

    protected override async Task OnInitializedAsync()
    {
        if (IsEdit)
        {
            try
            {
                Book = await Http.GetFromJsonAsync<Book>($"api/books/{Id}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error fetching book: {ex.Message}");
            }
        }
    }

    private void GoToBooks()
    {
        Navigation.NavigateTo("/books");
    }

    private async Task SaveBook()
    {
        try
        {
            if (IsEdit)
            {
                await Http.PutAsJsonAsync($"api/books/{Id}", Book);
            }
            else
            {
                await Http.PostAsJsonAsync("api/books", Book);
            }

            Navigation.NavigateTo("/books");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving book: {ex.Message}");
        }
    }
}
